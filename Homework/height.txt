height 
Language/Type: Java binary trees
Related Links:Math

Write a method named height that returns the height of a tree. Your method accepts as its parameter a TreeNode that refers to the root of the tree. The height is defined to be the number of levels (i.e., the number of nodes along the longest path from the root to a leaf). The empty tree has height 0, a tree of one node has height 1, a root node with one or two leaves as children has height 2, and so on. For example, the following tree has a height of 4:

        ____7
       /     \
    __4       8
   /   \
  2     5
 / \     \
1   3     6
Assume that you are interacting with TreeNodes as defined below:

public class TreeNode {
    public int data;
    public TreeNode left;
    public TreeNode right;
    
    public TreeNode() { ... }
    public TreeNode(int data) { ... }
    public TreeNode(int data, TreeNode left, TreeNode right) { ... }
}


Solution:

public static int height(TreeNode root) {
    if (root == null) {
        return 0;
    } else {
        int leftHeight = height(root.left);
        int rightHeight = height(root.right);
        return 1 + Math.max(leftHeight, rightHeight);
    }
}









