collapse 
Language/Type: Java arrays

Write a method named collapse that accepts an array of integers as a parameter and returns a new array where each pair of integers from the original array has been replaced by the sum of that pair. For example, if an array called a stores {7, 2, 8, 9, 4, 13, 7, 1, 9, 10}, then the call of collapse(a) should return a new array containing {9, 17, 17, 8, 19}. The first pair from the original list is collapsed into 9 (7 + 2), the second pair is collapsed into 17 (8 + 9), and so on.

If the list stores an odd number of elements, the final element is not collapsed. For example, if the array had been {1, 2, 3, 4, 5}, then the call would return {3, 7, 5}. Your method should not change the array that is passed as a parameter.

Solution:

public static int[] collapse(int[] arr) {
    int[] result = new int[(arr.length + 1) / 2]; // the result array will have half the length of the original array
    for (int i = 0; i < result.length; i++) {
        if (2 * i + 1 < arr.length) {
            result[i] = arr[2 * i] + arr[2 * i + 1]; // collapse the current pair of elements
        } else {
            result[i] = arr[arr.length - 1]; // copy over the last element if there's an odd number of elements
        }
    }
    return result;
}